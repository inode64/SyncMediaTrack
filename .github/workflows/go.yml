# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go
#

name: go-package

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        targets: [
          { os: ubuntu-latest },
          { os: macos-latest },
          { os: windows-2022 }
        ]
    runs-on: ${{ matrix.targets.os }}
    steps:
      - uses: actions/checkout@v3
        with:
           fetch-depth: 0 # Mandatory to use the extract version from tag action
           
      - uses: extractions/setup-just@v1

      - name: Extract version from tag
        uses: damienaicheh/extract-version-from-tag-action@v1.1.0

      - name: Build SyncMediaTrack (macOS)
        if: ${{ matrix.targets.os == 'macos-latest' }}
        run: |
          GOOS=darwin GOARCH=amd64 go build -o SyncMediaTrack
          tar -cf SyncMediaTrack-macos-amd64-v${{ env.MAJOR }}.${{ env.MINOR }}.tar.gz SyncMediaTrack

      - name: Upload compress files
        if: ${{ matrix.targets.os == 'macos-latest' }}
        uses: actions/upload-artifact@v3
        with:
          name: SyncMediaTrack
          path: SyncMediaTrack-macos-amd64-v${{ env.MAJOR }}.${{ env.MINOR }}.tar.gz

      - name: Build SyncMediaTrack (Linux)
        if: ${{ matrix.targets.os == 'ubuntu-latest' }}
        run: |
          GOOS=linux GOARCH=amd64 go build -o SyncMediaTrack
          tar -cf SyncMediaTrack-linux-amd64-v${{ env.MAJOR }}.${{ env.MINOR }}.tar.gz SyncMediaTrack

      - name: Upload compress files
        if: ${{ matrix.targets.os == 'ubuntu-latest' }}
        uses: actions/upload-artifact@v3
        with:
          name: SyncMediaTrack
          path: SyncMediaTrack-linux-amd64-v${{ env.MAJOR }}.${{ env.MINOR }}.tar.gz 
            
      - name: Build SyncMediaTrack (Windows)
        if: ${{ matrix.targets.os == 'windows-2022' }}
        run: go build -o SyncMediaTrack.exe

      - name: Install zip (Windows)
        if: ${{ matrix.targets.os == 'windows-2022' }}
        uses: thedoctor0/zip-release@0.7.1
        with:
          type: 'zip'
          filename: 'SyncMediaTrack-windows-amd64-v${{ env.MAJOR }}.${{ env.MINOR }}.zip'
          path: SyncMediaTrack.exe

      - name: Upload compress files
        if: ${{ matrix.targets.os == 'windows-2022' }}
        uses: actions/upload-artifact@v3
        with:
          name: SyncMediaTrack
          path: SyncMediaTrack-windows-amd64-v${{ env.MAJOR }}.${{ env.MINOR }}.zip

            
  github_release:
    name: Create GitHub release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: SyncMediaTrack

      - run: ls -l

      - name: Publish
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ./*
