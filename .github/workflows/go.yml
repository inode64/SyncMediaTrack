# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        targets: [
          { os: ubuntu-latest },
          { os: macos-latest },
          { os: windows-2022 }
        ]
    runs-on: ${{ matrix.targets.os }}
    steps:
      - uses: actions/checkout@v3

      - uses: extractions/setup-just@v1

      - name: Build SyncMediaTrack (macOS)
        if: ${{ matrix.targets.os == 'macos-latest' }}
        run: GOOS=darwin GOARCH=amd64 go build -o SyncMediaTrack

      - name: Build SyncMediaTrack (Linux)
        if: ${{ matrix.targets.os == 'ubuntu-latest' }}
        run: GOOS=linux GOARCH=amd64 go build -o SyncMediaTrack

      - name: Build SyncMediaTrack (Windows)
        if: ${{ matrix.targets.os == 'windows-2022' }}
        run: GOOS=windows GOARCH=amd64 go build -o SyncMediaTrack.exe

      - name: Save Binaries
        uses: actions/upload-artifact@v3
        with:
          name: SyncMediaTrack
          path: _deployment/_binaries/*.*

  github_release:
    name: Create GitHub release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: SyncMediaTrack

      - run: ls -l

      - name: Publish
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ./*
